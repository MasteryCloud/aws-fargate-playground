---
AWSTemplateFormatVersion: 2010-09-09
Description: Elastic Load Balancer v2 (application load balancer)

Parameters:

  HostedZoneId:
    Type: String

  DomainName:
    Type: String

  VpcId:
    Type: AWS::EC2::VPC::Id

  PublicSubnetA:
    Description: Public subnet id
    Type: AWS::EC2::Subnet::Id

  PublicSubnetB:
    Description: Public subnet id
    Type: AWS::EC2::Subnet::Id

  LogsBucket:
    Description: S3 logs bucket name
    Type: String

Resources:

  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VpcId
      GroupDescription: Access to the load balancer
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: -1

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Ref AWS::StackName
      Subnets:
        - !Ref PublicSubnetA
        - !Ref PublicSubnetB
      SecurityGroups:
        - !Ref LoadBalancerSecurityGroup
      LoadBalancerAttributes:
        -
          Key: "access_logs.s3.enabled"
          Value: true
        -
          Key: "access_logs.s3.bucket"
          Value: !Ref LogsBucket

  LoadBalancerDnsEntry:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneId: !Ref HostedZoneId
      RecordSets:
        -
          Name: !Ref DomainName
          Type: A
          AliasTarget:
            HostedZoneId:
              Fn::GetAtt: LoadBalancer.CanonicalHostedZoneID
            DNSName:
              Fn::GetAtt: LoadBalancer.DNSName

Outputs:
  LoadBalancer:
    Description: A reference to the Application Load Balancer
    Value: !Ref LoadBalancer
    Export:
      Name: !Sub "${AWS::Region}-${AWS::StackName}-LoadBalancer"

  LoadBalancerUrl:
    Description: The URL of the ALB
    Value: !GetAtt LoadBalancer.DNSName
    Export:
      Name: !Sub "${AWS::Region}-${AWS::StackName}-LoadBalancerUrl"

  LoadBalancerSecurityGroupId:
    Description: ID for Loadbalancer Security Group
    Value: !Ref LoadBalancerSecurityGroup